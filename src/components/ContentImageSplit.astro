---
// Library imports
import { Image } from "astro:assets"
// Component imports
import Button from "./Button.astro"
type Props = {
  title: string
  body: string
  btnText?: string
  img: ImageMetadata
  imgAltText: string
  imgToRight?: boolean
  variety:
    | "arrow-right"
    | "arrow-left-up"
    | "arrow-left-down"
    | "arrow-left-down-short"
}
const arrowVarieties = {
  "arrow-right": "arrow-right",
  "arrow-left-up": "arrow-left-up",
  "arrow-left-down": "arrow-left-down",
  "arrow-left-down-short": "arrow-left-down-short",
}
const {
  title,
  body,
  btnText,
  img,
  imgAltText,
  imgToRight = false,
  variety,
} = Astro.props
---

<section aria-label={title}>
  <div
    class:list={[
      "container",
      "inner",
      { "image-to-right": imgToRight },
      arrowVarieties[variety],
    ]}
  >
    <div class="image">
      <Image src={img} alt={imgAltText} class="round" />
    </div>
    <div class="content">
      <h2 class="heading-2">{title}</h2>
      <p>{body}</p>
      {btnText && <Button>{btnText}</Button>}
    </div>
  </div>
</section>

<style lang="scss">
  @use "../sass/abstracts" as *;

  section {
    --circle-offset: 4rem;
    --max-image-size: 445px;

    position: relative;
    overflow-x: clip;
    margin-block-start: 7.5rem;

    .inner {
      display: grid;
      justify-items: center;
      gap: 3.5rem;

      .image {
        position: relative;

        max-width: var(--max-image-size);
        max-height: var(--max-image-size);
        display: grid;
        place-items: center;
      }

      .content {
        display: grid;
        gap: 2rem;
        justify-items: center;
        text-align: center;

        p {
          max-width: 63ch;
        }
      }
    }

    // Tablet
    @include mq(medium) {
      .inner {
        .image {
          &::before {
            content: url("../assets/patterns/circle.svg");
            position: absolute;
            top: 0;
            left: calc(var(--circle-offset) * -1);
            transform: translateX(-100%);
          }
        }

        .content {
          gap: 2.5rem;
        }
      }
    }

    // Desktop
    @include mq(large) {
      margin-block-start: 10rem;

      .inner {
        grid-template-columns: 1fr 1fr;
        justify-items: start;
        align-items: center;
        grid-auto-flow: dense;

        .image {
          justify-self: start;
        }

        .content {
          text-align: start;
          justify-items: start;
          gap: 1.5rem;

          :last-child:not(p) {
            margin-block-start: 1rem;
          }
        }
      }
    }

    // Image to right

    .image-to-right {
      .image {
        @include mq(medium) {
          &::before {
            left: revert;
            right: calc(var(--circle-offset) * -1);
            transform: translateX(100%);
          }
        }

        @include mq(large) {
          grid-column: -2 / -1;
          justify-self: end;
        }
      }
    }

    // Arrows
    .arrow-right {
      &::after {
        content: url("../assets/patterns/right-arrow.svg");
        position: absolute;
        top: 0;
        right: 30%;

        @include mq(40em) {
          left: 0;
          right: revert;
        }

        @include mq(medium) {
          transform: translateX(-20%);
        }
      }
    }

    .arrow-left-up {
      &::after {
        content: url("../assets/patterns/left-upward-arrow.svg");
        position: absolute;
        top: min(
          100vw - ($container-min-margin-inline-small-screens * 2),
          var(--max-image-size)
        );
        left: $container-min-margin-inline-small-screens;
        transform: translate(0, -120%);

        @include mq(medium) {
          left: $container-min-margin-inline-medium-screens;
        }

        @include mq(48.75em) {
          left: revert;
          right: 0;
          transform: translate(
            clamp(0rem, 18.75rem + -20.8333vi, 6.25rem),
            -120%
          );

          @include mq(large) {
            transform: translate(clamp(0rem, 54rem + -60vi, 18rem), -120%);
          }
        }
      }
    }

    .arrow-left-down {
      &::after {
        content: url("../assets/patterns/left-downward-arrow.svg");
        position: absolute;
        top: min(
          100vw - ($container-min-margin-inline-small-screens * 2),
          var(--max-image-size)
        );
        left: $container-min-margin-inline-small-screens;
        transform: translate(0, -100%);

        @include mq(medium) {
          left: $container-min-margin-inline-medium-screens;
        }

        @include mq(48.75em) {
          left: revert;
          right: 0;
          transform: translate(
            clamp(0rem, 18.75rem + -20.8333vi, 6.25rem),
            -100%
          );
        }
      }
    }

    .arrow-left-down-short {
      &::after {
        content: url("../assets/patterns/left-downward-arrow.svg");
        position: absolute;
        top: 0;
        left: 43%;

        @include mq(medium) {
          top: 77.5px;
          left: revert;
          right: 0;
          transform: translateX(50%);
        }
      }
    }
  }
</style>
